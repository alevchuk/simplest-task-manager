#!/bin/bash

# simplest-task-manager  A very simple human task management
# Copyright (C) 2011 Aleksandr Levchuk
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Fail on error
set -e

task_dir=~/projects/037-thesis-tasks
task_file_name=AOL-THESIS

task_file=$task_dir/$task_file_name
lock_file=${task_file}.lock

# Check if the lock file is valid
if [ ! -e $lock_file ]; then
  echo "ERROR: $lock_file does not exists"
  echo "Please create that file and make it writable by the Admin group"
  exit 1
fi

# Check if the system is locked
if [ -s $lock_file ]; then
  echo "ERROR: $lock_file is not empty"
  echo "Someone is currently editing AOL-TASKS?"
  echo ""
  echo "Please check with:"
  echo "diff /srv/projects/biocluster-admin/AOL-TASKS{,.lock}"
  exit 1
fi

# Figure out the next [task id]
task_id=`awk '/^ *aol[0-9]+/ {print $1}' $task_file | sort -n | uniq | tail -1`
int_id=`echo $task_id | awk -Fl '{print $2}'`
if [[ "${int_id}" =~ ^[0-9]+$ ]] && [[ $((10#$int_id)) -gt 0 ]] ; then
  int_id="$(echo $int_id | sed 's/0*//')" # Strip zeroes
  let int_id++
  task_id="aol$(printf "%03d" $int_id)"
else
  task_id="aol001"
fi

# Put the [task id] and date on the first line of the lockfile
# follwed by the contents of the task file
echo "$task_id (opened: $(date +'%a %d-%m-%Y'))" > $lock_file
cat $task_file >> $lock_file

# Make a copy for checking if there were changes
cat $lock_file > ${lock_file}.unchanged

# Open the text editor on the temporary file
vim $lock_file

# Check if anything changed
set +e
diff $lock_file ${lock_file}.unchanged > /dev/null
if [ $? -eq 0 ]; then
  echo "Nothing changed" > /dev/stderr
else
  diff $lock_file $task_file > /dev/null
  if [ $? -eq 0 ]; then
    echo "Nothing changed" > /dev/stderr
  else
    # Copy the temporary file over the main oprational file
    cat $lock_file > $task_file
  fi
fi
set -e

# Un-lock and Clean-up
cat /dev/null > $lock_file
cat /dev/null > ${lock_file}.unchanged



## Git commit
cd $task_dir
git add $task_file_name
git commit -m "TASKS edit by $USER" > /dev/null
git gc --auto
